{"version":3,"file":"breadcrumbs.js","sources":["../../src/services/breadcrumbs.ts"],"sourcesContent":["import { guidFor } from '@ember/object/internals';\nimport { scheduleOnce, next } from '@ember/runloop';\nimport Service from '@ember/service';\nimport { tracked } from '@glimmer/tracking';\nimport type { BreadcrumbData, BreadcrumbId } from '../private-types';\n\nexport default class BreadcrumbsService extends Service {\n  @tracked breadcrumbData: Map<BreadcrumbId, BreadcrumbData> = new Map();\n  pendingBreadcrumbData: Map<BreadcrumbId, BreadcrumbData> | null = null;\n  didForceRerender: boolean = false;\n\n  get items() {\n    return [...this.breadcrumbData.values()];\n  }\n\n  addBreadcrumb(breadcrumbData: BreadcrumbData): BreadcrumbId {\n    this.scheduleDataUpdate();\n\n    const uniqueId = generateUniqueId();\n    this.pendingBreadcrumbData?.set(uniqueId, breadcrumbData);\n    return uniqueId;\n  }\n\n  updateBreadcrumb(uniqueId: BreadcrumbId, breadcrumbData: BreadcrumbData) {\n    if (!this.didForceRerender) {\n      this.scheduleDataUpdate();\n      this.pendingBreadcrumbData?.set(uniqueId, breadcrumbData);\n    }\n  }\n\n  removeBreadcrumb(uniqueId: BreadcrumbId): void {\n    this.scheduleDataUpdate();\n    this.pendingBreadcrumbData?.delete(uniqueId);\n  }\n\n  scheduleDataUpdate(): void {\n    if (!this.pendingBreadcrumbData) {\n      this.pendingBreadcrumbData = new Map(this.breadcrumbData);\n    }\n\n    scheduleOnce('afterRender', this, this.updateBreadcrumbData);\n  }\n\n  updateBreadcrumbData(): void {\n    this.didForceRerender = true;\n\n    this.breadcrumbData = this.pendingBreadcrumbData!;\n    this.pendingBreadcrumbData = null;\n\n    next(this, this.resetRerenderFlag);\n  }\n\n  resetRerenderFlag(): void {\n    this.didForceRerender = false;\n  }\n}\n\nfunction generateUniqueId(): BreadcrumbId {\n  return guidFor({});\n}\n"],"names":["BreadcrumbsService","Service","g","this","prototype","tracked","Map","i","void 0","pendingBreadcrumbData","didForceRerender","items","breadcrumbData","values","addBreadcrumb","scheduleDataUpdate","uniqueId","generateUniqueId","set","updateBreadcrumb","removeBreadcrumb","delete","scheduleOnce","updateBreadcrumbData","next","resetRerenderFlag","guidFor"],"mappings":";;;;;;AAMe,MAAMA,kBAAkB,SAASC,OAAO,CAAC;AAAA,EAAA;AAAAC,IAAAA,CAAA,CAAAC,IAAA,CAAAC,SAAA,qBACrDC,OAAO,CAAA,EAAA,YAAA;MAAA,OAAqD,IAAIC,GAAG,EAAE,CAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAAA,eAAA,IAAAC,CAAA,CAAAJ,IAAA,qBAAAK,KAAA,CAAA,EAAA;AACtEC,EAAAA,qBAAqB,GAA6C,IAAI,CAAA;AACtEC,EAAAA,gBAAgB,GAAY,KAAK,CAAA;EAEjC,IAAIC,KAAKA,GAAG;IACV,OAAO,CAAC,GAAG,IAAI,CAACC,cAAc,CAACC,MAAM,EAAE,CAAC,CAAA;AAC1C,GAAA;EAEAC,aAAaA,CAACF,cAA8B,EAAgB;IAC1D,IAAI,CAACG,kBAAkB,EAAE,CAAA;AAEzB,IAAA,MAAMC,QAAQ,GAAGC,gBAAgB,EAAE,CAAA;IACnC,IAAI,CAACR,qBAAqB,EAAES,GAAG,CAACF,QAAQ,EAAEJ,cAAc,CAAC,CAAA;AACzD,IAAA,OAAOI,QAAQ,CAAA;AACjB,GAAA;AAEAG,EAAAA,gBAAgBA,CAACH,QAAsB,EAAEJ,cAA8B,EAAE;AACvE,IAAA,IAAI,CAAC,IAAI,CAACF,gBAAgB,EAAE;MAC1B,IAAI,CAACK,kBAAkB,EAAE,CAAA;MACzB,IAAI,CAACN,qBAAqB,EAAES,GAAG,CAACF,QAAQ,EAAEJ,cAAc,CAAC,CAAA;AAC3D,KAAA;AACF,GAAA;EAEAQ,gBAAgBA,CAACJ,QAAsB,EAAQ;IAC7C,IAAI,CAACD,kBAAkB,EAAE,CAAA;AACzB,IAAA,IAAI,CAACN,qBAAqB,EAAEY,MAAM,CAACL,QAAQ,CAAC,CAAA;AAC9C,GAAA;AAEAD,EAAAA,kBAAkBA,GAAS;AACzB,IAAA,IAAI,CAAC,IAAI,CAACN,qBAAqB,EAAE;MAC/B,IAAI,CAACA,qBAAqB,GAAG,IAAIH,GAAG,CAAC,IAAI,CAACM,cAAc,CAAC,CAAA;AAC3D,KAAA;IAEAU,YAAY,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAACC,oBAAoB,CAAC,CAAA;AAC9D,GAAA;AAEAA,EAAAA,oBAAoBA,GAAS;IAC3B,IAAI,CAACb,gBAAgB,GAAG,IAAI,CAAA;AAE5B,IAAA,IAAI,CAACE,cAAc,GAAG,IAAI,CAACH,qBAAsB,CAAA;IACjD,IAAI,CAACA,qBAAqB,GAAG,IAAI,CAAA;AAEjCe,IAAAA,IAAI,CAAC,IAAI,EAAE,IAAI,CAACC,iBAAiB,CAAC,CAAA;AACpC,GAAA;AAEAA,EAAAA,iBAAiBA,GAAS;IACxB,IAAI,CAACf,gBAAgB,GAAG,KAAK,CAAA;AAC/B,GAAA;AACF,CAAA;AAEA,SAASO,gBAAgBA,GAAiB;AACxC,EAAA,OAAOS,OAAO,CAAC,EAAE,CAAC,CAAA;AACpB;;;;"}